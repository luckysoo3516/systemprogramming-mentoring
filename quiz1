1. git을 쓰는 이유
코드의 수정 내역을 추적하고 원격저장소에 올리면서 형상관리를 한다. 이전 버전으로 돌릴 수 있다. 
또한 브랜치를 나누어 기능별로 나누어 코드 작성을 할 수 있다.

2. 우분투에 git이 깔려있지 않을 때 사용하는 명령어 (sudo ***-*** ******* git)
sudo apt-get install git

3. git에서 파일을 수정하고 커밋해야 하는 것이 있는지(현재 상태) 확인하는 명령어 (git ******)
git status

4. git에서 새 파일을 추가할 때 쓰는 명령어 (git *** filename)
git add filename

5. git에서 수정한 것을 커밋할 때 쓰는 명령어 (git ******)  (git ****** -m "Message")
git commit -m "Message"

6. git에서 변경사항을 비교할 때 쓰는 명령어 (git ****) 리눅스에도 두 파일을 비교할 때 쓰는 명령어와 동일
git diff

7. 지금 있는 폴더가 git repository인지 확인 하는 방법 아무거나 (~을 찾는다, ~ 명령어를 쳐본다)
ls -al명령어를 친 뒤 .git 파일을 찾는다.

8. git과 SVN이 다른 점
git은 분산관리 시스템이기 때문에 로컬과 원격 둘다 저장할 수 있지만 SVN은 온라인에 접속해 있는 상태로 작업한다.
SVN은 그래서 항상 인터넷에 접속이 되어있어야 하지만 git은 로컬에서 작업할 수 있다.

9. git에서 파일이 수정 되던 말던 확인하지 않도록 숨겨놓을 파일을 지정해 주는 것은? ( .********* 파일 )
.gitignore

10. 로컬에서 git init으로 repository를 생성하면 git push origin master를 할 수 없다. 그 이유는?
git init 만으로는 .git 파일만 만들어질 뿐 아직 프로젝트의 어떤 파일도 관리하지 않는다. 따라서 stage에 아무것도 올라와 있지 않기 때문에
push를 할 수 없다.

11. git에서 커밋한 로그를 보고 싶을 때 사용하는 명령은? (git ***)
git log

12. remote repository (원격)에서 수정된 소스의 내용을 받아올 때 사용하는 명령어는? (git ****)
git pull

13. remote repository (원격)를 로컬로 가져와 작업을 시작하기 위해 사용하는 명령어는? (git ***** address)
git clone address

-----

14. vi / vim 다른 점은?
본질적으로 같은 프로그램이지만 vi에는 문법강조 기능 등이 빠져있다. 리눅스에서 vi를 치면 vim 이 실행된다.

15. vi의 설정을 담은 파일 이름은? ( .***** )
.vimrc

16. vi에서 파일을 수정하기 위해서 삽입모드로 변경하기 위해서 입력하는 알파벳은?
i

17. vi에서 특정 줄로 이동하기 위해서 쓰는 기호는?
:N (N은 숫자)

18. vi에서 y, d, p 문자가 의미하는 바는? (3개 각각 쓰시오)
y : 복사
d : 삭제 ( delete)
p : 붙여넣기 (paste)

19. vi에서 주석을 입력하기 위해 여러줄을 세로로 블록 지정하고, 값을 입력할 때의  키 조합은? 2개 다 쓰시오. (Hint: shift/ ctrl + v/i)
Ctrl+v - Shift+i - // - ese두번 

20. vi에서 n개의 줄을 복사하기 위해서 사용하는 명령어는? ( *** ) 
nyy (n은 숫자)

21. vi에서 명령어 모드로 진입하기 위해서 사용하는 키는?
esc

22. vi에서 저장후 종료하기 위해서 사용하는 명령어 모드의 명령은?
:wq

23. vi에서 현재 파일 맨 뒤에 새로운 파일을 불러오는 명령어 모드의 명령은? ( ** filename )
:r filename


-----

24. gcc 말고 다른 컴파일러들 이름 아는 것 1개 이상 쓰시오.
java 컴파일러 javac
스칼라 컴파일러 scalac

25. gcc에서 출력되는 실행파일 이름을 바꾸기 위해 사용하는 옵션은? ( gcc -* filename.c )
gcc -o filemname.c

26. gcc에서 컴파일을 하면 생성되는 실행파일 기본 이름은? ( *.*** )
a.out

27. 정적/동적 라이브러리 확장자를 각각 쓰시오. ( .* / .** )
정적 : .a 
동적 : .so

28. 정적 라이브러리 대신 동적 라이브러리를 사용하면 좋은 점은?
하나 이상의 프로세스에서 사용할 때 메모리 양과 실행파일 크기를 줄여줌.

29. 정적 라이브러리에 어떤 목적 파일들이 포함되어 있는지 확인할 수 있다 / 없다.
있다.

30. 동적 라이브러리의 네이밍 규칙을 쓰시오 ( ***ssl.** 이런식 - 앞의 3글자 )
lib

